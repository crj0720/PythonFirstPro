# 函数定义:
# def + 关键字 + 小括号 + 冒号 + 换行缩进 + 代码块 定义一个函数
# def 函数名():
#     代码块
#
# 函数调用：
# 函数名加()即可调用该函数
#
# 函数说明文档：
# 函数内容的第一行可以用字符串进行函数说明

# print('小张的身高是：%f'%1.73)
# print('小张的体重是：%f'%163)
# print('小张的爱好是：%s'%'唱歌')
# print('小张的专业是：%s'%'软甲工程')
# 处理其他的逻辑信息
# 多次去打印小张的信息
# print('---------------多次输出相同的信息---------------------')
# print('小张的身高是：%f'%1.73)
# print('小张的体重是：%f'%163)
# print('小张的爱好是：%s'%'唱歌')
# print('小张的专业是：%s'%'软甲工程')

# 针对上面的场景，需要进一步的优化代码，【方案：封装函数】
def printInfo():
    """
    这个函数是用来打印个人信息的 是对小张信息显示的组合
    :return:
    """
    # 函数代码块
    print('小张的身高是：%f'%1.73)
    print('小张的体重是：%f'%163)
    print('小张的爱好是：%s'%'唱歌')
    print('小张的专业是：%s'%'软甲工程')
    pass

# 函数的调用
printInfo() # 函数调用
printInfo() # 多次去调用
print("我是其他代码块")
# 进一步的去完善这样的需求【输出不同人的信息】 方案：通过传入参数来解决
# 参数可以有0到n个参数
def printInfoName(name,height,weigh,hobby,pro):
    """
    这个函数是用来打印个人信息的 输出不同人的信息
    :return:
    """
    # 函数代码块
    print('%s的身高是：%f'%(name,height))
    print('%s的体重是：%f'%(name,weigh))
    print('%s的爱好是：%s'%(name,hobby))
    print('%s的专业是：%s'%(name,pro))
    pass

# 调用带参数的信息
printInfoName('小米',172,123,'fish','网络安全')
printInfoName('小汪',152,108,'game','软件工程')
printInfoName('小贵',180,150,'watch tv','网络安全')